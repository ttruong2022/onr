{#
/**
 * @file
 * Default theme implementation to display a paragraph in USWDS Paragraph Components.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# The template default set classes. #}
{# Sets Paragraph ID as class. #}
{%
	set classes = [
	'paragraph',
	'paragraph--type--' ~ paragraph.bundle|clean_class,
	view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
	'paragraph--id--' ~ paragraph.id.value,
	'grid-container'
]
%}

{{ attach_library('onr/featured-images') }}

<div{{ attributes.addClass(classes) }}>
	<ul class="usa-card-group">
		{% for key, item in content.field_featured_images if key|first != '#' %}

			{% set breakpoints = [
				'desktop:grid-col-4',
				'tablet:grid-col-4',
				'mobile:grid-col-12',
			] %}

			{% set card_attributes = create_attribute() %}
			<li{{ card_attributes.addClass(breakpoints).addClass(default).addClass('usa-card') }}>
				{% set title = item['#paragraph'].field_button.title %}
					<div class="usa-card__container">
						<div class="usa-card__media">
							{% if item['#paragraph'].field_card_image.entity.field_media_image %}
								<div class="usa-card__img usa-card__media--exdent">
									{{ item['#paragraph'].field_card_image[0]|view }}
								</div>
							{% endif %}
						</div>

						{% if item['#paragraph'].field_text.value %}
							<div class="usa-card__body">
								{{ item['#paragraph'].field_text.value|raw }}
							</div>
						{% endif %}

						<header class="usa-card__header">
							<h2 class="usa-card__heading">
								<a href="{{ item['#paragraph'].field_button.0.url }}" class="text-no-underline card-link" title="{{ title }}">
									{{ item['#paragraph'].field_card_title.value }}
								</a>
							</h2>
						</header>
					</div>
			</li>
		{% endfor %}
	</ul>
</div>
