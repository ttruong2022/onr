# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    
    server_tokens off;
    etag off;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    fastcgi_cache_path  /var/cache/httpd/fastcgi levels=1:2 keys_zone=FASTCGI_CACHE:1m max_size=768m inactive=1y use_temp_path=off;
    fastcgi_cache_key "$scheme$request_method$host$request_uri$is_args$args";
    fastcgi_cache_background_update on;

    proxy_cache_path  /var/cache/httpd/proxy levels=1:2 keys_zone=PROXY_CACHE:1m max_size=768m inactive=24h use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
    proxy_cache_background_update on;
    proxy_cache PROXY_CACHE;
    proxy_cache_valid 200 301 302 1m;
    proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
    proxy_cache_revalidate on;
    proxy_cache_lock on;

    set_real_ip_from  10.180.0.0/16;
    real_ip_header    X-Forwarded-For;
    real_ip_recursive on;

    map $http_host $robotstxt {
      default robots.txt;
      ~^(.+)\.onr-research\.com$ robots-dev.txt;
    }

    map $request_uri $request_path {
        ~(?<captured_path>[^?]*) $captured_path;
    }

    # AWS only
    # All legit traffic has the authenticated subject cn
    map $http_x_amzn_waf_x_subject_cn $blocked {
        "authenticated" 0;
        default $privileged_path;
    }

    # Prod version
    # if not CAC, check if privileged path.
    # else allow.
    # map $http_x_subject_cn $blocked {
    #     "(null)" $privileged_path;
    #     "" $privileged_path;
    #     default 0;
    # }
    # or..
    # map $remote_addr $blocked {
    #     "10.190.66.41" 0;
    #     default $privileged_path;
    # }

    # If not authenticated and privileged path, block.
    # else, allow.
    map $request_path $privileged_path {
        ~(^/admin) 1;
        ~(^/autologout_ajax_get_time_left) 1;
        ~(^/autologout_ajax_logout) 1;
        ~(^/autologout_ajax_set_last) 1;
        ~(^/autologout_alt_logout) 1;
        ~(^/block-category/autocomplete) 1;
        ~(^/block/.*) 1;
        ~(^/clone/.*/quick_clone) 1;
        ~(^/contextual/render) 1;
        ~(^/cron/.*) 1;
        ~(^/devel/.*) 1;
        ~(^/editor/.*) 1;
        ~(^/extlink/settings.js) 1;
        ~(^/filter/tips/.*) 1;
        ~(^/layout_builder/.*) 1;
        ~(^/media-library) 1;
        ~(^/media/.*/delete) 1;
        ~(^/media/.*/devel/token) 1;
        ~(^/media/.*/edit) 1;
        ~(^/media/.*/edit/latest) 1;
        ~(^/media/.*/layout) 1;
        ~(^/media/.*/layout/discard-changes) 1;
        ~(^/media/.*/layout/revert) 1;
        ~(^/media/.*/preview) 1;
        ~(^/media/.*/revert) 1;
        ~(^/media/.*/revisions) 1;
        ~(^/media/.*/usage) 1;
        ~(^/media/add) 1;
        ~(^/media/add/.*) 1;
        ~(^/media/delete) 1;
        ~(^/node/.*/delete) 1;
        ~(^/node/.*/devel/token) 1;
        ~(^/node/.*/edit) 1;
        ~(^/node/.*/latest) 1;
        ~(^/node/.*/layout) 1;
        ~(^/node/.*/layout/discard-changes) 1;
        ~(^/node/.*/layout/revert) 1;
        ~(^/node/.*/revert) 1;
        ~(^/node/.*/revisions) 1;
        ~(^/node/add) 1;
        ~(^/node/add/.*) 1;
        ~(^/node/preview/.*) 1;
        ~(^/quickedit/.*) 1;
        ~(^/run-cron) 1;
        ~(^/taxonomy/term/.*/delete) 1;
        ~(^/taxonomy/term/.*/devel/token) 1;
        ~(^/taxonomy/term/.*/edit) 1;
        ~(^/taxonomy/term/.*/layout) 1;
        ~(^/taxonomy/term/.*/layout/discard-changes) 1;
        ~(^/taxonomy/term/.*/layout/revert) 1;
        ~(^/token/tree) 1;
        ~(^/toolbar/subtrees/.*) 1;
        ~(^/user$) 1;
        ~(^/user/.*/cancel) 1;
        ~(^/user/.*/devel/token) 1;
        ~(^/user/.*/edit) 1;
        ~(^/user/.*/layout) 1;
        ~(^/user/.*/layout/discard-changes) 1;
        ~(^/user/.*/layout/revert) 1;
        ~(^/user/.*/moderation-dashboard) 1;
        ~(^/user/.*/shortcuts) 1;
        ~(^/user/.*/workbench_access) 1;
        ~(^/user/login) 1;
        ~(^/user/logout) 1;
        ~(^/user/register) 1;
        ~(^/user/reset/.*) 1;
        ~(^/views-bulk-operations/.*) 1;
        default 0;
    }
    
    # Set-Cookie only allowed for privileged paths.
    # Works for only ONE (1) cookie.
    map $privileged_path $cookies {
        1 $upstream_http_set_cookie;
        0 '';
    }

    server {
        listen       443 default_server ssl;
        listen       [::]:443 default_server ssl;
        server_name  _;
        root         /var/www/webroot/;

        # Enable SSL
        ssl_certificate /etc/pki/tls/certs/web.crt;
        ssl_certificate_key /etc/pki/tls/private/web.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1.3 TLSv1.2;
    	ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:AES256-GCM-SHA384;
    	ssl_ecdh_curve secp384r1;	
    	ssl_prefer_server_ciphers on;
        
    	ssl_session_tickets off;

        # Load configuration files for the default server block.
        # include /etc/nginx/default.d/*.conf;

        client_max_body_size 50M;
        
        error_page 497 https://$http_host$request_uri;

        fastcgi_cache FASTCGI_CACHE;
        fastcgi_cache_valid 200 301 302 1m;
        # fastcgi_cache_valid 200 301 15s;
        # fastcgi_cache_valid 302     1m;
        # fastcgi_cache_valid 404     1s;
        fastcgi_cache_use_stale error timeout updating invalid_header http_500 http_503;
        fastcgi_cache_revalidate on;
        fastcgi_cache_lock on;

        set $no_cache 0;

        #Don't cache POST requests
        if ($request_method = POST) {
            set $no_cache 1;
        }

        #Don't cache the following URLs
        if ($request_uri ~* "/user") {
            set $no_cache 1;
        }

        #Don't cache if there is a cookie called PHPSESSID
        if ($http_cookie ~* "SESS") {
            set $no_cache 1;
        }

        fastcgi_cache_bypass $no_cache;
        fastcgi_no_cache $no_cache;

        add_header X-UA-Compatible IE=Edge;

        gzip on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_min_length 256;
        gzip_types
          application/atom+xml
          application/geo+json
          application/javascript
          application/x-javascript
          application/json
          application/ld+json
          application/manifest+json
          application/rdf+xml
          application/rss+xml
          application/xhtml+xml
          application/xml
          font/eot
          font/otf
          font/ttf
          image/svg+xml
          text/css
          text/javascript
          text/plain
          text/xml;

        # Prevent control characters from being added to requests
        if ($request_uri ~* .*[\x00-\x1f\x7f]+.*) {
            return 435;
        }
        
        # Prevent XSS in URL path
        location ~* ((\%3C)|<)[^\n]+((\%3E)|>) {
            return 404;
        }

        include /etc/nginx/conf.location.d/*.conf;

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }
        
        location = /robots.txt {
            allow all;
            rewrite .* /$robotstxt break;
            log_not_found off;
            access_log off;
        }
        
        # Very rarely should these ever be accessed outside of your lan
        location ~* \.(txt|log)$ {
            allow 10.180.0.0/16;
            deny all;
        }
        
        location ~ \..*/.*\.php$ {
            return 403;
        }
        
        location ~ \web.config$ {
            return 403;
        }
        
        location ~ ^/sites/.*/private/ {
            return 403;
        }
        
        # Block access to scripts in site files directory
        location ~ ^/sites/[^/]+/files/.*\.php$ {
            deny all;
        }
        
        # Allow "Well-Known URIs" as per RFC 5785
        location ~* ^/.well-known/ {
            allow all;
        }
        
        # Block access to "hidden" files and directories whose names begin with a
        # period. This includes directories used by version control systems such
        # as Subversion or Git to store control files.
        location ~ (^|/)\. {
            return 403;
        }
        
        location / {
            # try_files $uri @rewrite; # For Drupal <= 6
            try_files $uri /index.php?$query_string; # For Drupal >= 7
        }
        
        location @rewrite {
            rewrite ^ /index.php;
        }
        
        # Don't allow direct access to PHP files in the vendor directory.
        location ~ /vendor/.*\.php$ {
            deny all;
            return 404;
        }
        
        location ~ gulpfile.js$|package.json$|cron.php$|install.php$|update.php$ {
    		deny all;
    		return 404;
    	}
    	
        # Protect files and directories from prying eyes.
        location ~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock)|web\.config)$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$ {
            deny all;
            return 404;
        }

        # In Drupal 8, we must also match new paths where the '.php' appears in
        # the middle, such as update.php/selection. The rule we use is strict,
        # and only allows this pattern with the update.php front controller.
        # This allows legacy path aliases in the form of
        # blog/index.php/legacy-path to continue to route to Drupal nodes. If
        # you do not have any paths like that, then you might prefer to use a
        # laxer rule, such as:
        #   location ~ \.php(/|$) {
        # The laxer rule will continue to work if Drupal uses this new URL
        # pattern with front controllers other than update.php in a future
        # release.
        location ~ '\.php$|^/update.php' {
            if ($blocked) {
                return 403;
            }
            fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
            try_files $fastcgi_script_name =404;
            # Security note: If you're running a version of PHP older than the
            # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
            # See http://serverfault.com/q/627903/94922 for details.
            include fastcgi_params;
            # Block httpoxy attacks. See https://httpoxy.org/.
            fastcgi_param HTTP_PROXY "";
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param QUERY_STRING $query_string;
            fastcgi_intercept_errors on;
            fastcgi_ignore_headers Cache-Control Expires;
            # add_header X-Proxy-Cache $upstream_cache_status always;
            # add_header X-Path $request_path always;
            # add_header X-Privileged-Path $privileged_path always;
            
            fastcgi_hide_header Set-Cookie;
            add_header Set-Cookie $cookies;
            
            fastcgi_hide_header Server;
            fastcgi_hide_header X-Powered-By;
            fastcgi_hide_header X-Drupal-Cache;
            fastcgi_hide_header X-Drupal-Dynamic-Cache;
            fastcgi_hide_header X-Generator;
            fastcgi_hide_header X-Runtime;
            fastcgi_hide_header X-Rack-Cache;
            
            # Prevent Cross-Frame scripting
            fastcgi_hide_header X-Frame-Options;
            add_header X-Frame-Options SAMEORIGIN;
            
            # Content Security Policy
            fastcgi_hide_header Content-Security-Policy;
            add_header Content-Security-Policy "frame-ancestors 'self'; default-src 'none'; script-src 'self' 'unsafe-inline'; connect-src 'self'; font-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; base-uri 'self'; form-action 'self'; frame-src 'self' www.youtube.com player.vimeo.com;";
            
            # HSTS
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            
            # Cross Site Scripting
            add_header X-XSS-Protection "1; mode=block";
            
            add_header X-On-Behalf-Of $http_x_amzn_waf_x_subject_cn always;
            # PHP 5 socket location.
            #fastcgi_pass unix:/var/run/php5-fpm.sock;
            # PHP 7 socket location.
            #fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
            fastcgi_pass php-fpm;
        }
        
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|eot|otf|ttf)$ {
            try_files $uri @rewrite;
            expires max;
            log_not_found off;
        }
        
        # Fighting with Styles? This little gem is amazing.
        # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
        location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
            try_files $uri @rewrite;
        }
        
        # Handle private files through Drupal. Private file's path can come
        # with a language prefix.
        location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
            try_files $uri /index.php?$query_string;
        }
        
        # Enforce clean URLs
        # Removes index.php from urls like www.example.com/index.php/my-page --> www.example.com/my-page
        # Could be done with 301 for permanent or other redirect codes.
        if ($request_uri ~* "^(.*/)index\.php/(.*)") {
            return 307 $1$2;
        }
        
        # Added to address 502 errors in theme.
        fastcgi_buffers 16 32k;
        fastcgi_buffer_size 64k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        
        error_page 401 402 403 404 /40x.html;
            location = /40x.html {
        }
        
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /var/www/webroot;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}